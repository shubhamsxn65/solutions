#include<iostream>
#include<queue>
#include<vector>
#include<cstdio>

using namespace std;

typedef pair<int,int> ii;

#define INF 500
#define white -1
#define grey 0
#define balck 1

int n,m;
bool check(int i,int j)
{	
	if(i<n && i>=0 && j<m && j>=0)
		return true;
	else
		return false;
}
int main()
{
	queue<ii> Q;
	int t,i,j;
	int dis[200][200],inp[200][200];
	char a[200];
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d%d",&n,&m);
		for(i=0;i<200;i++)
			for(j=0;j<200;j++)
			{	
				dis[i][j]=INF;
			}
		for(i=0;i<n;i++)
		{
			scanf("%s",a);
			for(j=0;a[j];j++)
			{	
				inp[i][j]=a[j]-'0';
				if(inp[i][j])
				{
					ii node(i,j);
					dis[i][j]=0;
					Q.push(node);
				}
			}
		}
		while(!Q.empty())
		{
			ii node = Q.front();
			i=node.first;
			j=node.second;
			Q.pop();
			if(check(i,j+1) && dis[i][j+1]>dis[i][j]+1){ii node(i,j+1);dis[i][j+1]=dis[i][j]+1;Q.push(node);}
			if(check(i,j-1) && dis[i][j-1]>dis[i][j]+1){ii node(i,j-1);dis[i][j-1]=dis[i][j]+1;Q.push(node);}
			if(check(i+1,j) && dis[i+1][j]>dis[i][j]+1){ii node(i+1,j);dis[i+1][j]=dis[i][j]+1;Q.push(node);}
			if(check(i-1,j) && dis[i-1][j]>dis[i][j]+1){ii node(i-1,j);dis[i-1][j]=dis[i][j]+1;Q.push(node);}
		}
		for(i=0;i<n;i++,printf("\n"))
			for(j=0;j<m;j++)
				printf("%d ",dis[i][j]);
	}
	return 0;
}
					