#include<stdio.h>
#include<string.h>
#include<stdlib.h>
void mergesort(int a[], int low, int high)
 { 
 	int i = 0;
 	int length = high - low + 1; 
 	int pivot  = 0; 
 	int merge1 = 0; 
 	int merge2 = 0; 
	int working[length]; 
 	if(low == high)  
  		return;  
	pivot  = (low + high) / 2; 
	mergesort(a, low, pivot);
	mergesort(a, pivot + 1, high); 
        for(i = 0; i < length; i++)  
                working[i] = a[low + i]; 
        merge1 = 0; 
        merge2 = pivot - low + 1; 
        for(i = 0; i < length; i++) 
        {  
        	if(merge2 <= high - low)   
        		if(merge1 <= pivot - low)    
        			if(working[merge1] > working[merge2]) 
            					a[i + low] = working[merge2++];  
             			else     a[i + low] = working[merge1++]; 
                 	else    a[i + low] = working[merge2++];
                else   a[i + low] = working[merge1++];
        }
}
int main()
{
	int t,l,k,i,length[1010],max[5000],j,w;
	scanf("%d",&t);
	k=getchar();char a[300000];
	while(gets(a)!= NULL)
	{	
		if(a[0]>32)
		{
			 	
			k=0;//printf("%s\n",a);
			for(i=0;a[i];)
			{	l=0;//printf("HI %c",a[i]);
				while(a[i]>32 && a[i])
				{
					l++;
					i++;
				}
				length[k++]=l;//printf("length=%d\t",l);
				if(!a[i])
					break;
				while(a[i]<33)
					i++;
				if(!a[i])
					break;
			}
			j=0;
			for(i=0;i<k;)
			{	
				l=length[i];w=0;	
				while(l==length[i] &&i<k)
				{
					w++;i++;
				}
				max[j++]=w;
			}
			mergesort(max,0,j-1);
			printf("%d\n",max[j-1]);
		}		
	}
	return 0;
}
