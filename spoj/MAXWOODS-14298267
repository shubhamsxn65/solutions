#include<cstdio>
#include<algorithm>
#include<cstdlib>
#include<cstring>
using namespace std;

#define MAX 205
#define LEFT 0
#define RIGHT 1

int n,m,dp[MAX][MAX][3];
char arr[MAX][MAX];
int dfs(int x,int y,int f)
{
	if(x<0 || x>=m || y<0 || y>=n)
		return 0;
	//printf("%d %d\n",x,y);
	if(dp[x][y][f]!=-1)
		return dp[x][y][f];
	int ans=0;
	if(f==RIGHT)
	{
		if(y+1<n && arr[x][y+1]!=-1)
			ans=arr[x][y+1]+dfs(x,y+1,f);
		if(x+1< m && arr[x+1][y]!=-1)
			ans=max(ans,arr[x+1][y]+dfs(x+1,y,LEFT));
	}
	if(f==LEFT)
	{
		if(y-1>=0 && arr[x][y-1]!=-1)
			ans=arr[x][y-1]+dfs(x,y-1,f);
		if(x+1< m && arr[x+1][y]!=-1)
			ans=max(ans,arr[x+1][y]+dfs(x+1,y,RIGHT));
	}	
	dp[x][y][f]=max(ans,dp[x][y][f]);
	return dp[x][y][f];
}

int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d%d",&m,&n);
		memset(dp,-1,sizeof(dp));
		for(int i=0;i<m;i++)
		{
			scanf("%s",arr[i]);
			for(int j=0;j<n;j++)
				if(arr[i][j]=='T')
					arr[i][j]=1;
				else if(arr[i][j]=='#')
					arr[i][j]=-1;
				else
					arr[i][j]=0;
		}
		if(arr[0][0]==-1)
			printf("0\n");
		else
			printf("%d\n",arr[0][0]+dfs(0,0,RIGHT));
	}
	return 0;
}