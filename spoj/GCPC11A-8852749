#include<stdio.h>
#include<math.h>
long long cal_mpow(long long int n,long long int k)
{
	long long mpow=0,i;
	for(i=k;n>=i && i>0;i*=k)
	{	
		mpow+=(n/i);
		if(i>((long long)pow(2,63)-1)/k)
			break;
	}
	return mpow;
}


int main()
{
	long long int n,k,pow,i,prime[1000],temp,min;
	int t,pos;
	scanf("%d",&t);
	pos=0;
	while(t--)
	{
		long long int count[1000]={0};
		scanf("%lld%lld",&n,&k);
		pos=0;
		for(i=2;i*i<=k;i++)
		{
			if(!(k%i))
			{
				prime[pos]=i;
				while(!(k%i))
				{
					count[pos]++;
					k=k/i;
				}
				pos++;
			}
		}
		if(k>1)
		{
			prime[pos]=k;
			count[pos++]=1;
		}
		min=cal_mpow(n,prime[0])/count[0];
		for(i=1;i<pos;i++)
		{
			//printf("%lld %d\n",prime[i],count[i]);
			temp=cal_mpow(n,prime[i])/count[i];
			if(min>temp)
				min=temp;
		}
		printf("%lld\n",min);
	}
	return 0;
}