#include<stdio.h>
void mergesort(int a[], int low, int high)
 { 
 	int i = 0;
 	int length = high - low + 1; 
 	int pivot  = 0; 
 	int merge1 = 0; 
 	int merge2 = 0; 
	int working[length]; 
 	if(low == high)  
  		return;  
	pivot  = (low + high) / 2; 
	mergesort(a, low, pivot);
	mergesort(a, pivot + 1, high); 
        for(i = 0; i < length; i++)  
                working[i] = a[low + i]; 
        merge1 = 0; 
        merge2 = pivot - low + 1; 
        for(i = 0; i < length; i++) 
        {  
        	if(merge2 <= high - low)   
        		if(merge1 <= pivot - low)    
        			if(working[merge1] > working[merge2]) 
            					a[i + low] = working[merge2++];  
             			else     a[i + low] = working[merge1++]; 
                 	else    a[i + low] = working[merge2++];
                else   a[i + low] = working[merge1++];
        }
}
int main()
{
	int t,n,flag,i,x,pos;
	scanf("%d",&t);
	while(t--)
	{	int a[2010]={0};flag=0;
		scanf("%d",&n);
		for(i=0;i<n;i++)
		{
			scanf("%d",&x);
			a[x+1000]++;
		}
		pos=0;
		for(i=0;i<2010;i++)
		{
			if(a[i]>n/2)
			{
				flag=1;
				break;
			}
			pos=i;
		}
		if(flag)
			printf("YES %d\n",pos-999);
		else if(!flag)
			printf("NO\n");
	}
	return 0;
}