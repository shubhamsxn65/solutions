#include<stdio.h>
void merge(int a[], int low, int high, int mid)
{
int i, j, k, c[1000000];
i=low;
j=mid+1;
k=low;
while((i<=mid)&&(j<=high))
{
if(a[i]<a[j])
{
c[k]=a[i];
k++;
i++;
}
else
{
c[k]=a[j];
k++;
j++;
}
}
while(i<=mid)
{
c[k]=a[i];
k++;
i++;
}
while(j<=high)
{
c[k]=a[j];
k++;
j++;
}
for(i=low;i<k;i++)
{
a[i]=c[i];
}
}
void mergesort(int a[], int low, int high)
{
int mid;
if(low<high)
{
mid=(low+high)/2;
mergesort(a,low,mid);
mergesort(a,mid+1,high);
merge(a,low,high,mid);
}

}


int main()
{
long n,ar[1000000],i,flag,x,s;
while(1)
{
scanf("%ld",&n);
if(n==0)
break;
else if(n==1)
printf("IMPOSSIBLE\n");
else
{
flag=0;
for(i=1;i<=n;i++)
scanf("%ld",&ar[i]);
mergesort(ar,1,n);
x=0;
s=0;
ar[0]=0;
for(i=1;i<n;i++)
{

x=ar[i+1]-ar[i];
if(x>200)
{
flag=1;
break;
}
s=s+x;

}
s+=200;
if(s<1422)
flag=1;

if(flag==1)
{
printf("IMPOSSIBLE\n");
}
else
{
for(i=1;i<=n;i++)
{
ar[i]=1422-ar[i];
}
x=s-1422;
s=0;
for(i=n;i>=2;i--)
{
if(i==n)
{
if(ar[n]>x)
{
flag=1;
break;
}
else
{
s=s+ar[n];

}
}
x=ar[i-1]-ar[i];
if(x>200)
{
flag=1;
break;
}
s=s+x;
}
if(s<1422)
flag=1;
if(flag==1)
{
printf("IMPOSSIBLE\n");
}
else
printf("POSSIBLE\n");
}

}
}
return 0;
}