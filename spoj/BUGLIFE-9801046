#include<iostream>
#include<cstdio>
#include<queue>
using namespace std;
 
bool bfs(int i,bool (*adj)[2005],bool *state,int n){
	int level[2005]={0};
        queue<int> q;
        q.push(i);
        state[i]=1;
        level[i]=1;
        while(!q.empty())
        {
                int u=q.front(),j;
                q.pop();
                for(j=1;j<=n;j++)
                {
                        if(adj[u][j] && !state[j])
                        {
                                q.push(j);
                                state[j]=1;
                                level[j]=level[u]+1;
                        }
                        if(adj[u][j] && level[u]==level[j])
                                return true;
                }
        }
        return false;
}
                
 
int main(){
        int t,l=0,i;
        //cin >> t;
	scanf("%d",&t);
        while(l++ <t){
                bool adj[2005][2005]={0},state[2005]={0},w;
                int n,q;
                //cin >> n >> q;
                scanf("%d",&n);scanf("%d",&q);
                while(q--)
                {
                        int u,v;
                       // cin >> u >> v;
                       scanf("%d",&u);scanf("%d",&v);
                        adj[u][v]=1;
                        adj[v][u]=1;
                }
              	printf("Scenario #%d:\n",l);
                w=false;
                for(i=1;i<=n;i++)
                {
                        if(!state[i])
                        {
		                w=bfs(i,adj,state,n);
		                if(w)
		                        break;
                        }
                }
                if(w)
                        printf("Suspicious bugs found!\n");
                else
                       printf("No suspicious bugs found!\n");
        }
        return 0;
}