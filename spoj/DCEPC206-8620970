#include<stdio.h>
void Merge(int * , int , int , int );
void MergeSort(int *array, int left, int right)
{
        int mid = (left+right)/2;
        if(left<right)
        {
                MergeSort(array,left,mid);
                MergeSort(array,mid+1,right);
                Merge(array,left,mid,right);
        }
}
long long sum;
void Merge(int *array, int left, int mid, int right)
{
        int tempArray[right-left+1];
        int pos=0,lpos = left,rpos = mid + 1;
        while(lpos <= mid && rpos <= right)
        {
                if(array[lpos] < array[rpos])
                {
                        tempArray[pos++] = array[lpos];
                        sum+=(long long)(right-rpos+1)*(array[lpos]);
                        lpos++;
                }
                else
                {	
                        tempArray[pos++] = array[rpos++];
                }
        }
        while(lpos <= mid)  tempArray[pos++] = array[lpos++];
        while(rpos <= right)tempArray[pos++] = array[rpos++];
        int iter;
        for(iter = 0;iter < pos; iter++)
        {
                array[iter+left] = tempArray[iter];
        }
        return;
}
int get_int()
{
	char c;
	int ans=0;
	c=getc_unlocked(stdin);
	while(c>47)
	{	
		ans=(ans*10) + (c-48);
		c=getc_unlocked(stdin);
	}
	return ans;
}

int main()
{
	int n,ar[100010],i,t; 
	t=get_int();
	while(t--)
	{
		n=get_int();
		for(i=0;i<n;i++)
			ar[i]=get_int();
		sum=0;
		MergeSort(ar,0,n-1);
		printf("%lld\n",sum);
	}
	return 0;
}