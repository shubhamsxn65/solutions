#include<stdio.h>
#include<stdlib.h>
#include<stdio.h>
void Merge(unsigned long long int * , unsigned long long int , unsigned long long int , unsigned long long int );
void MergeSort(unsigned long long int *array, unsigned long long int left, unsigned long long int right)
{
        unsigned long long int mid = (left+right)/2;
        if(left<right)
        {
                MergeSort(array,left,mid);
                MergeSort(array,mid+1,right);
                Merge(array,left,mid,right);
        }
}
void Merge(unsigned long long int *array, unsigned long long int left, unsigned long long int mid, unsigned long long int right)
{
        unsigned long long int tempArray[right-left+1];
        unsigned long long int pos=0,lpos = left,rpos = mid + 1;
        while(lpos <= mid && rpos <= right)
        {
                if(array[lpos] < array[rpos])
                {
                        tempArray[pos++] = array[lpos++];
                }
                else
                {	
                        tempArray[pos++] = array[rpos++];
                }
        }
        while(lpos <= mid)  tempArray[pos++] = array[lpos++];
        while(rpos <= right)tempArray[pos++] = array[rpos++];
        unsigned long long int iter;
        for(iter = 0;iter < pos; iter++)
        {
                array[iter+left] = tempArray[iter];
        }
        return;
}

unsigned long long int student[100000];
int main()
{
	unsigned long long int n,cost[100000],i,ans,j;
	while(scanf("%llu",&n) &&n)
	{
		ans=0;
		for(i=0;i<n;i++)
			scanf("%llu",student+i);
		for(i=0;i<n;i++)
			scanf("%llu",cost+i);
		MergeSort(student,0,n-1);
		MergeSort(cost,0,n-1);
		for(i=0,j=n-1;i<n;i++,j--)
			ans+=(student[i]*cost[j]);
		printf("%llu\n",ans);
	}
	return 0;
}	